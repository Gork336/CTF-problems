import{_ as n,o as s,c as a,e as t}from"./app-bd32c210.js";const p={},o=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> _0x5a46 <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token string">&quot;0a029}&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;_again_5&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;this&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;Password\\x20Verified&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;Incorrect\\x20password&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;getElementById&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;value&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;substring&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;picoCTF{&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;not_this&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">_0x4bd822<span class="token punctuation">,</span> _0x2bd6f7</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> <span class="token function-variable function">_0xb4bdb3</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">_0x1d68f6</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">--</span>_0x1d68f6<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      _0x4bd822<span class="token punctuation">[</span><span class="token string">&quot;push&quot;</span><span class="token punctuation">]</span><span class="token punctuation">(</span>_0x4bd822<span class="token punctuation">[</span><span class="token string">&quot;shift&quot;</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token function">_0xb4bdb3</span><span class="token punctuation">(</span><span class="token operator">++</span>_0x2bd6f7<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>_0x5a46<span class="token punctuation">,</span> <span class="token number">0x1b3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> <span class="token function-variable function">_0x4b5b</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">_0x2d8f05<span class="token punctuation">,</span> _0x4b81bb</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  _0x2d8f05 <span class="token operator">=</span> _0x2d8f05 <span class="token operator">-</span> <span class="token number">0x0</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> _0x4d74cb <span class="token operator">=</span> _0x5a46<span class="token punctuation">[</span>_0x2d8f05<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> _0x4d74cb<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">verify</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//checkpass = document[_0x4b5b(&quot;0x0&quot;)](&quot;pass&quot;)[_0x4b5b(&quot;0x1&quot;)];</span>
  checkpass <span class="token operator">=</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">;</span>
  split <span class="token operator">=</span> <span class="token number">0x4</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>checkpass<span class="token punctuation">[</span><span class="token function">_0x4b5b</span><span class="token punctuation">(</span><span class="token string">&quot;0x2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token number">0x0</span><span class="token punctuation">,</span> split <span class="token operator">*</span> <span class="token number">0x2</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token function">_0x4b5b</span><span class="token punctuation">(</span><span class="token string">&quot;0x3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>checkpass<span class="token punctuation">[</span><span class="token function">_0x4b5b</span><span class="token punctuation">(</span><span class="token string">&quot;0x2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token number">0x7</span><span class="token punctuation">,</span> <span class="token number">0x9</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&quot;{n&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>
        checkpass<span class="token punctuation">[</span><span class="token function">_0x4b5b</span><span class="token punctuation">(</span><span class="token string">&quot;0x2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">(</span>split <span class="token operator">*</span> <span class="token number">0x2</span><span class="token punctuation">,</span> split <span class="token operator">*</span> <span class="token number">0x2</span> <span class="token operator">*</span> <span class="token number">0x2</span><span class="token punctuation">)</span> <span class="token operator">==</span>
        <span class="token function">_0x4b5b</span><span class="token punctuation">(</span><span class="token string">&quot;0x4&quot;</span><span class="token punctuation">)</span>
      <span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>checkpass<span class="token punctuation">[</span><span class="token function">_0x4b5b</span><span class="token punctuation">(</span><span class="token string">&quot;0x2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token number">0x3</span><span class="token punctuation">,</span> <span class="token number">0x6</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&quot;oCT&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>
            checkpass<span class="token punctuation">[</span><span class="token function">_0x4b5b</span><span class="token punctuation">(</span><span class="token string">&quot;0x2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">(</span>split <span class="token operator">*</span> <span class="token number">0x3</span> <span class="token operator">*</span> <span class="token number">0x2</span><span class="token punctuation">,</span> split <span class="token operator">*</span> <span class="token number">0x4</span> <span class="token operator">*</span> <span class="token number">0x2</span><span class="token punctuation">)</span> <span class="token operator">==</span>
            <span class="token function">_0x4b5b</span><span class="token punctuation">(</span><span class="token string">&quot;0x5&quot;</span><span class="token punctuation">)</span>
          <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>checkpass<span class="token punctuation">[</span><span class="token string">&quot;substring&quot;</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token number">0x6</span><span class="token punctuation">,</span> <span class="token number">0xb</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&quot;F{not&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">if</span> <span class="token punctuation">(</span>
                checkpass<span class="token punctuation">[</span><span class="token function">_0x4b5b</span><span class="token punctuation">(</span><span class="token string">&quot;0x2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">(</span>
                  split <span class="token operator">*</span> <span class="token number">0x2</span> <span class="token operator">*</span> <span class="token number">0x2</span><span class="token punctuation">,</span>
                  split <span class="token operator">*</span> <span class="token number">0x3</span> <span class="token operator">*</span> <span class="token number">0x2</span>
                <span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token function">_0x4b5b</span><span class="token punctuation">(</span><span class="token string">&quot;0x6&quot;</span><span class="token punctuation">)</span>
              <span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>checkpass<span class="token punctuation">[</span><span class="token function">_0x4b5b</span><span class="token punctuation">(</span><span class="token string">&quot;0x2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token number">0xc</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token function">_0x4b5b</span><span class="token punctuation">(</span><span class="token string">&quot;0x7&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">_0x4b5b</span><span class="token punctuation">(</span><span class="token string">&quot;0x8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
              <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">_0x4b5b</span><span class="token punctuation">(</span><span class="token string">&quot;0x9&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 以下是添加的输出</span>
    <span class="token comment">// console.log(_0x4b5b(&quot;0x3&quot;))</span>
    <span class="token comment">// console.log(&quot;{n&quot;)</span>
    <span class="token comment">// console.log(_0x4b5b(&quot;0x4&quot;))</span>
    <span class="token comment">// console.log(&quot;oCT&quot;)</span>
    <span class="token comment">// console.log( _0x4b5b(&quot;0x5&quot;))</span>
    <span class="token comment">// console.log(&quot;F{not&quot;)</span>
    <span class="token comment">// console.log(_0x4b5b(&quot;0x6&quot;))</span>
    <span class="token comment">// console.log(_0x4b5b(&quot;0x7&quot;))</span>
    <span class="token comment">// console.log(_0x4b5b(&quot;0x8&quot;));</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token function">verify</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过片段拼凑出flag</p>`,2),c=[o];function e(u,l){return s(),a("div",null,c)}const k=n(p,[["render",e],["__file","Client-side-again.html.vue"]]);export{k as default};
