import{_ as n,o as s,c as a,e as t}from"./app-855cd45a.js";const p={},e=t(`<p>#PHP 序列化</p><p>查看源码</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!--
User-agent: *
Disallow: 什么东西呢？
--&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看 robots.txt</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>User-agent: *
Disallow: /cl45s.php
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>查看文件 <code>cl45s.php</code></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
	<span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">show_source</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;cl45s.php&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">class</span> <span class="token class-name-definition class-name">wllm</span><span class="token punctuation">{</span>          
		<span class="token keyword">public</span> <span class="token variable">$admin</span><span class="token punctuation">;</span>       
		<span class="token keyword">public</span> <span class="token variable">$passwd</span><span class="token punctuation">;</span>          
		<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        
			<span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">admin</span> <span class="token operator">=</span><span class="token string double-quoted-string">&quot;user&quot;</span><span class="token punctuation">;</span>        
			<span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">passwd</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;123456&quot;</span><span class="token punctuation">;</span>       
		<span class="token punctuation">}</span>              
		<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>           
			<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">admin</span> <span class="token operator">===</span> <span class="token string double-quoted-string">&quot;admin&quot;</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">passwd</span> <span class="token operator">===</span> <span class="token string double-quoted-string">&quot;ctf&quot;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
				<span class="token keyword">include</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;flag.php&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               
				<span class="token keyword">echo</span> <span class="token variable">$flag</span><span class="token punctuation">;</span>           
			<span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>               
				<span class="token keyword">echo</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">admin</span><span class="token punctuation">;</span>               
				<span class="token keyword">echo</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">passwd</span><span class="token punctuation">;</span>               
				<span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;Just a bit more!&quot;</span><span class="token punctuation">;</span>           
			<span class="token punctuation">}</span>       
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token variable">$p</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;p&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$p</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以下构造</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$p</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">wllm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$p</span><span class="token operator">-&gt;</span><span class="token property">admin</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;admin&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$p</span><span class="token operator">-&gt;</span><span class="token property">passwd</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;ctf&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$p</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>之后传入序列化后的 p</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>?p=O:4:&quot;wllm&quot;:2:{s:5:&quot;admin&quot;;s:5:&quot;admin&quot;;s:6:&quot;passwd&quot;;s:3:&quot;ctf&quot;;}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,11),o=[e];function l(i,c){return s(),a("div",null,o)}const r=n(p,[["render",l],["__file","ez_unserialize.html.vue"]]);export{r as default};
